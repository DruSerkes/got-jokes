{"version":3,"sources":["helpers/helpers.ts","Joke/Joke.tsx","Favorite/Favorite.tsx","Favorites/Favorites.tsx","SaveJoke/SaveJoke.tsx","RemoveFavorites/RemoveFavorites.tsx","TweetButton/TweetButton.tsx","AppButtons/AppButtons.tsx","Footer/Footer.tsx","App.tsx","hooks/useLocalStorage.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","wait","ms","Promise","res","setTimeout","getJokeWithRetry","a","depth","axios","get","response","newJoke","data","console","log","error","Joke","joke","isLoading","Container","className","Spinner","animation","type","Row","Col","setup","delivery","Favorite","clearFavorites","handleRemove","id","Button","variant","onClick","Favorites","favorites","length","map","fav","SaveJoke","viewingFavorites","saveFavoriteJoke","useState","showModal","setShowModal","handleClose","disabled","Modal","show","onHide","Header","closeButton","Title","Body","Footer","RemoveFavorites","haveFavorites","showRemoveModal","setShowRemoveModal","TweetButton","tweetText","as","title","href","target","rel","AppButtons","setJoke","setViewingFavorites","setFavorites","ButtonGroup","aria-label","undefined","newFavorites","data-testid","App","key","initialState","value","JSON","parse","window","localStorage","getItem","stringify","e","items","setItems","useEffect","setItem","useLocalStorage","setIsLoading","newfavorites","filter","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aaf8255.chunk.js","sourcesContent":["import axios from 'axios';\nimport { jokeData } from '../types';\n\nconst BASE_URL = 'https://v2.jokeapi.dev';\n\nexport const wait = (ms: number) => new Promise(res => setTimeout(res, ms));\n\nexport const getJokeWithRetry = async (depth = 0): Promise<jokeData> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/joke/any?safe-mode`);\n        const newJoke: jokeData = response.data;\n        return newJoke\n    } catch (error) {\n        if (depth > 7) throw error;\n\n        console.log({ error })\n        await wait(2 ** depth * 10);\n        depth++;\n        return getJokeWithRetry(depth);\n    }\n};\n\n\n","import * as React from 'react';\nimport { jokeData } from '../types';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner'\n\ninterface JokeProps {\n    isLoading: boolean;\n    joke?: jokeData;\n}\n\nexport const Joke = ({ joke, isLoading }: JokeProps) => {\n    return (\n        <Container className='Joke'>\n            {!joke && <Spinner animation='grow' />}\n            {\n                !isLoading && joke?.type === 'twopart' &&\n                <>\n                    <Row className='Joke-Setup my-3'>\n                        <Col>\n                            {joke?.setup}\n                        </Col>\n                    </Row>\n                    <Row className='Joke-Delivery my-3'>\n                        <Col>\n                            {joke?.delivery}\n                        </Col>\n                    </Row>\n                </>\n            }\n            {\n                !isLoading && joke?.type === 'single' &&\n                <Row className='my-3'>\n                    <Col>\n                        {joke?.joke}\n                    </Col>\n                </Row>\n            }\n        </Container>\n    )\n}","import * as React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jokeData } from '../types';\nimport './Favorite.css';\n\ninterface FavoritesProps {\n    joke: jokeData;\n    clearFavorites: (id: Number) => void;\n}\n\nexport const Favorite = ({ joke, clearFavorites }: FavoritesProps) => {\n    const handleRemove = () => clearFavorites(joke.id);\n    return (\n        <>\n            {joke.type === 'twopart'\n                ? (\n                    <li className='py-3 list-group-item-dark border-bottom rounded border-dark'>\n                        {joke?.setup}\n                        <br />\n                        {joke?.delivery}\n                        <Button\n                            variant=\"\"\n                            onClick={handleRemove}\n                            className=\"Favorite-removeButton\"\n                        >\n                            X\n                    </Button>\n                    </li>\n                )\n                : (\n                    <li className='py-3 list-group-item-dark border-bottom rounded border-dark'>\n                        {joke?.joke}\n                        <Button\n                            variant=\"\"\n                            onClick={handleRemove}\n                            className=\"Favorite-removeButton\"\n                        >\n                            X\n                    </Button>\n                    </li>\n                )\n            }\n        </>\n    )\n}","import * as React from 'react';\nimport { jokeData } from '../types';\nimport { Favorite } from '../Favorite/Favorite';\n\ninterface FavoritesProps {\n    favorites?: jokeData[];\n    clearFavorites: (id: Number) => void;\n}\n\nexport const Favorites = ({ favorites, clearFavorites }: FavoritesProps) => {\n    return (\n        <>\n            <h3>Favorites</h3>\n            {!favorites?.length && <h4>You don't have any favorites!</h4>}\n            <ul className='Favorites rounded list-group my-3'>\n                {favorites?.map(fav => <Favorite key={fav.id} joke={fav} clearFavorites={clearFavorites} />)}\n            </ul>\n        </>\n    )\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jokeData } from '../types';\n\n\ninterface SaveJokeProps {\n\tjoke?: jokeData;\n\tviewingFavorites: boolean;\n\tsaveFavoriteJoke: () => void;\n}\n\nexport const SaveJoke = ({ joke, viewingFavorites, saveFavoriteJoke }: SaveJokeProps) => {\n\tconst [showModal, setShowModal] = useState(false);\n\n\tconst handleShow = () => setShowModal(true);\n\tconst handleClose = () => setShowModal(false);\n\n\tconst handleSaveJoke = () => {\n\t\tsaveFavoriteJoke();\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tvariant=\"info\"\n\t\t\t\tonClick={handleShow}\n\t\t\t\tdisabled={viewingFavorites ? true : false}\n\t\t\t\tclassName='my-4'>\n\t\t\t\tSave to Favorites\n      \t\t</Button>\n\n\t\t\t<Modal show={showModal} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Confirm</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Are you sure you want to save this joke to your favorites?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"outline-danger\" onClick={handleClose}>\n\t\t\t\t\t\tCancel\n          \t\t\t</Button>\n\t\t\t\t\t<Button variant=\"success\" onClick={handleSaveJoke}>\n\t\t\t\t\t\tSave\n          \t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n\ninterface RemoveFavoritesProps {\n    viewingFavorites: boolean;\n    haveFavorites: boolean;\n    clearFavorites: () => void;\n}\n\nexport const RemoveFavorites = ({ viewingFavorites, haveFavorites, clearFavorites }: RemoveFavoritesProps) => {\n    const [showRemoveModal, setShowRemoveModal] = useState(false);\n    const handleShowRemoveModal = () => setShowRemoveModal(true);\n    const handleClose = () => setShowRemoveModal(false);\n    const handleClearFavorites = () => {\n        clearFavorites();\n        setShowRemoveModal(false);\n    };\n    return (\n        <>\n            { viewingFavorites && haveFavorites &&\n                (<Button\n                    variant=\"warning\"\n                    onClick={handleShowRemoveModal}\n                    className='my-4'>\n                    Clear Favorites\n                </Button>)\n            }\n            <Modal show={showRemoveModal} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirm</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Are you sure you want to clear your favorites?\n              <br />\n                    <small className=\"text-warning\">This action cannot be undone!!</small>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-secondary\" onClick={handleClose}>\n                        Cancel\n                          </Button>\n                    <Button variant=\"danger\" onClick={handleClearFavorites}>\n                        Remove All\n                          </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n};","import * as React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jokeData } from '../types';\nimport './TweetButton.css';\n\ninterface TweetButtonProps {\n    joke: jokeData\n}\n\n\nexport const TweetButton = ({ joke }: TweetButtonProps) => {\n    const tweetText = joke.joke ? joke.joke : `${joke.setup} ${joke.delivery}`;\n\n    return (\n        <Button\n            as=\"a\"\n            variant=\"outline-dark\"\n            title=\"tweet this joke\"\n            href={`https://twitter.com/intent/tweet?text=${tweetText}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className='my-4 TweetButton'\n        />\n    );\n};","import * as React from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { SaveJoke } from '../SaveJoke/SaveJoke';\nimport { RemoveFavorites } from '../RemoveFavorites/RemoveFavorites';\nimport { jokeData } from '../types';\nimport { TweetButton } from '../TweetButton/TweetButton';\n\ninterface AppButtonsProps {\n    viewingFavorites: boolean;\n    isLoading: boolean;\n    joke: jokeData | undefined;\n    favorites: jokeData[];\n    setJoke: React.Dispatch<React.SetStateAction<jokeData | undefined>>;\n    setViewingFavorites: React.Dispatch<React.SetStateAction<boolean>>;\n    setFavorites: React.Dispatch<jokeData[]>;\n    clearFavorites: () => void;\n}\n\nexport const AppButtons = ({ viewingFavorites, isLoading, joke, favorites, setJoke, setViewingFavorites, setFavorites, clearFavorites }: AppButtonsProps) => {\n    const handleShowFavorites = () => setViewingFavorites(!viewingFavorites);\n    const handleGetJoke = () => {\n        setJoke(undefined);\n        setViewingFavorites(false);\n    };\n    const saveFavoriteJoke = () => {\n        if (!joke) return;\n        const newFavorites: jokeData[] = [joke, ...favorites];\n        setFavorites(newFavorites);\n        setJoke(undefined)\n    };\n    return (\n        <ButtonGroup aria-label=\"Main App Buttons\" className=\"Buttons\">\n            <Button\n                variant=\"primary\"\n                onClick={handleGetJoke}\n                disabled={isLoading ? true : false}\n                className='my-4'>\n                Make Me Laugh!\n            </Button>\n\n            <SaveJoke joke={joke} viewingFavorites={viewingFavorites} saveFavoriteJoke={saveFavoriteJoke} />\n\n            <Button\n                variant=\"secondary\"\n                onClick={handleShowFavorites}\n                className='my-4'>\n                {!viewingFavorites ? 'Show my Favorites' : 'Hide my Favorites'}\n            </Button>\n\n            {joke && !viewingFavorites && <TweetButton joke={joke} />}\n\n            <RemoveFavorites clearFavorites={clearFavorites} haveFavorites={!!favorites.length} viewingFavorites={viewingFavorites} />\n        </ButtonGroup>\n    );\n};","import * as React from 'react';\nimport './Footer.css';\n\nexport const Footer = () => {\n    return (\n        <footer className=\"Footer\">\n            <p>\n                <a data-testid=\"footer\" href=\"https://github.com/druserkes\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Dru Serkes &copy;2021\n\t\t\t\t</a>\n            </p>\n        </footer>\n    );\n};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { getJokeWithRetry } from './helpers/helpers';\nimport { jokeData } from './types';\nimport { Joke } from './Joke/Joke'\nimport { Favorites } from './Favorites/Favorites';\nimport { AppButtons } from './AppButtons/AppButtons';\nimport Container from 'react-bootstrap/esm/Container';\nimport { Footer } from './Footer/Footer';\nimport './App.css';\n\n\nexport const App = () => {\n  const [joke, setJoke] = useState<jokeData | undefined>(undefined);\n  const [favorites, setFavorites] = useLocalStorage('favorites');\n  const [isLoading, setIsLoading] = useState(true);\n  const [viewingFavorites, setViewingFavorites] = useState(false);\n  const clearFavorites = (id?: Number) => {\n    if (!id) {\n      setFavorites([])\n      setViewingFavorites(false);\n    } else {\n      const newfavorites = favorites.filter(fav => fav.id !== id);\n      setFavorites(newfavorites);\n    }\n  };\n\n  // Get a joke if you don't have one\n  useEffect(() => {\n    if (!joke) {\n      setIsLoading(true);\n      getJokeWithRetry().then(newJoke => setJoke(newJoke));\n      setIsLoading(false);\n    }\n  }, [joke]);\n\n  return (\n    <>\n      <Container className=\"App\">\n        <h1 className='h1 my-4'>Got Jokes</h1>\n\n        <AppButtons\n          viewingFavorites={viewingFavorites}\n          isLoading={isLoading}\n          joke={joke}\n          favorites={favorites}\n          setJoke={setJoke}\n          setViewingFavorites={setViewingFavorites}\n          setFavorites={setFavorites}\n          clearFavorites={clearFavorites}\n        />\n\n        {!viewingFavorites && (<Joke isLoading={isLoading} joke={joke} />)}\n\n        {viewingFavorites && <Favorites favorites={favorites} clearFavorites={clearFavorites} />}\n\n\n      </Container>\n      <Footer />\n\n    </>\n  );\n}","import { useState, useEffect } from 'react';\nimport { jokeData } from '../types';\n\nexport const useLocalStorage = (key: string, initialState: jokeData[] = []): [jokeData[], React.Dispatch<jokeData[]>] => {\n\tconst [items, setItems] = useState(() => {\n\t\tlet value;\n\t\ttry {\n\t\t\tvalue = JSON.parse(window.localStorage.getItem(key) || JSON.stringify(initialState));\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tvalue = initialState;\n\t\t}\n\t\treturn value;\n\t});\n\tuseEffect(\n\t\t() => {\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(items));\n\t\t},\n\t\t[key, items]\n\t);\n\n\treturn [items, setItems];\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}