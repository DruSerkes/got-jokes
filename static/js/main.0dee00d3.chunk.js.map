{"version":3,"sources":["helpers/helpers.ts","Joke/Joke.tsx","TweetButton/TweetButton.tsx","Favorite/Favorite.tsx","Favorites/Favorites.tsx","SaveJoke/SaveJoke.tsx","RemoveFavorites/RemoveFavorites.tsx","AppButtons/AppButtons.tsx","Footer/Footer.tsx","Disclaimer/Disclaimer.tsx","App.tsx","hooks/useLocalStorage.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","wait","ms","Promise","res","setTimeout","getJokeWithRetry","a","depth","axios","get","response","newJoke","data","console","log","error","Joke","joke","isLoading","Container","className","Spinner","animation","type","Row","Col","setup","delivery","TweetButton","bootstrapClasses","tweetText","tweetLink","Button","as","variant","title","href","target","rel","join","Favorite","clearFavorites","onClick","id","Favorites","favorites","length","map","fav","SaveJoke","viewingFavorites","saveFavoriteJoke","useState","showModal","setShowModal","handleClose","disabled","Modal","show","onHide","Header","closeButton","Title","Body","Footer","RemoveFavorites","haveFavorites","showRemoveModal","setShowRemoveModal","AppButtons","setJoke","setViewingFavorites","setFavorites","ButtonGroup","undefined","newFavorites","Disclaimer","App","key","initialState","value","JSON","parse","window","localStorage","getItem","stringify","e","items","setItems","useEffect","setItem","useLocalStorage","setIsLoading","newfavorites","filter","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dee00d3.chunk.js","sourcesContent":["import axios from 'axios';\nimport { jokeData } from '../types';\n\nconst BASE_URL = 'https://v2.jokeapi.dev';\n\nexport const wait = (ms: number) => new Promise(res => setTimeout(res, ms));\n\nexport const getJokeWithRetry = async (depth = 0): Promise<jokeData> => {\n  try {\n    const response = await axios.get(`${BASE_URL}/joke/any?safe-mode`);\n    const newJoke: jokeData = response.data;\n    return newJoke\n  } catch (error: any) {\n    if (depth > 7) throw error;\n\n    console.log({ error })\n    await wait(2 ** depth * 10);\n    depth++;\n    return getJokeWithRetry(depth);\n  }\n};\n\n\n","import * as React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner'\nimport { jokeData } from '../types';\nimport './Joke.css';\n\ninterface JokeProps {\n  isLoading: boolean;\n  joke?: jokeData;\n}\n\nexport const Joke = ({ joke, isLoading }: JokeProps) => {\n  return (\n    <Container className='Joke'>\n      {!joke && <Spinner animation='grow' />}\n      {\n        !isLoading && joke?.type === 'twopart' && (\n          <>\n            <Row className='Joke-Setup my-3'>\n              <Col>\n                {joke?.setup}\n              </Col>\n            </Row>\n            <Row className='Joke-Delivery my-3'>\n              <Col>\n                {joke?.delivery}\n              </Col>\n            </Row>\n          </>\n        )}\n      {\n        !isLoading && joke?.type === 'single' && (\n          <Row className='my-3'>\n            <Col>\n              {joke?.joke ?? \"No kidding!\\n Sorry, but we couldn't fetch a joke. Please try again\"}\n            </Col>\n          </Row>\n        )}\n    </Container>\n  )\n}","import * as React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jokeData } from '../types';\nimport './TweetButton.css';\n\ninterface TweetButtonProps {\n  joke: jokeData;\n  bootstrapClasses?: string[];\n};\n\nexport const TweetButton = ({ joke, bootstrapClasses }: TweetButtonProps) => {\n  const tweetText = joke.joke ? joke.joke : `${joke.setup} ${joke.delivery}`;\n  const tweetLink = `https://twitter.com/intent/tweet?text=${tweetText}`;\n  return (\n    <Button\n      as=\"a\"\n      variant=\"outline-dark\"\n      title=\"tweet this joke\"\n      href={tweetLink}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={`TweetButton ${bootstrapClasses ? bootstrapClasses.join(' ') : ''}`}\n    />\n  );\n};","import * as React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { TweetButton } from '../TweetButton/TweetButton';\nimport { jokeData } from '../types';\nimport './Favorite.css';\n\ninterface FavoritesProps {\n  joke: jokeData;\n  clearFavorites: (id: Number) => void;\n}\n\nexport const Favorite = ({ joke, clearFavorites }: FavoritesProps) => {\n  const handleRemove = () => clearFavorites(joke.id);\n  return (\n    <li className='py-3 list-group-item-dark border-bottom rounded border-dark'>\n      {joke.type === 'twopart'\n        ? (<>\n          {joke?.setup}\n          <br />\n          {joke?.delivery}\n        </>)\n        : joke?.joke}\n      <TweetButton joke={joke} bootstrapClasses={['py-3', 'px-1']} />\n      <Button onClick={handleRemove} className=\"Favorite-removeButton\" variant='link'>X</Button>\n    </li>\n  )\n}","import * as React from 'react';\nimport { jokeData } from '../types';\nimport { Favorite } from '../Favorite/Favorite';\n\ninterface FavoritesProps {\n  favorites?: jokeData[];\n  clearFavorites: (id: Number) => void;\n}\n\nexport const Favorites = ({ favorites, clearFavorites }: FavoritesProps) => {\n  return (\n    <>\n      <h3>Favorites</h3>\n      {!favorites?.length\n        ? <h4>You don't have any favorites!</h4>\n        : <ul className='Favorites rounded list-group my-3'>\n          {favorites.map(fav => <Favorite key={fav.id} joke={fav} clearFavorites={clearFavorites} />)}\n        </ul>}\n    </>\n  )\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jokeData } from '../types';\n\n\ninterface SaveJokeProps {\n  joke?: jokeData;\n  viewingFavorites: boolean;\n  saveFavoriteJoke: () => void;\n}\n\nexport const SaveJoke = ({ joke, viewingFavorites, saveFavoriteJoke }: SaveJokeProps) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n\n  const handleSaveJoke = () => {\n    saveFavoriteJoke();\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"info\"\n        onClick={handleShow}\n        disabled={viewingFavorites ? true : false}\n        className='my-4'>\n        Save to Favorites\n      </Button>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to save this joke to your favorites?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-danger\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"success\" onClick={handleSaveJoke}>\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n\ninterface RemoveFavoritesProps {\n  viewingFavorites: boolean;\n  haveFavorites: boolean;\n  clearFavorites: () => void;\n}\n\nexport const RemoveFavorites = ({ viewingFavorites, haveFavorites, clearFavorites }: RemoveFavoritesProps) => {\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const handleShowRemoveModal = () => setShowRemoveModal(true);\n  const handleClose = () => setShowRemoveModal(false);\n  const handleClearFavorites = () => {\n    clearFavorites();\n    setShowRemoveModal(false);\n  };\n  return (\n    <>\n      {viewingFavorites && haveFavorites && (\n        <Button\n          variant=\"warning\"\n          onClick={handleShowRemoveModal}\n          className='my-4'>\n          Clear Favorites\n        </Button>\n      )}\n      <Modal show={showRemoveModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to clear your favorites?\n          <br />\n          <small className=\"text-warning\">This action cannot be undone!!</small>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleClearFavorites}>\n            Remove All\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n};","import * as React from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { SaveJoke } from '../SaveJoke/SaveJoke';\nimport { RemoveFavorites } from '../RemoveFavorites/RemoveFavorites';\nimport { jokeData } from '../types';\nimport { TweetButton } from '../TweetButton/TweetButton';\nimport './AppButtons.css';\n\ninterface AppButtonsProps {\n  viewingFavorites: boolean;\n  isLoading: boolean;\n  joke: jokeData | undefined;\n  favorites: jokeData[];\n  setJoke: React.Dispatch<React.SetStateAction<jokeData | undefined>>;\n  setViewingFavorites: React.Dispatch<React.SetStateAction<boolean>>;\n  setFavorites: React.Dispatch<jokeData[]>;\n  clearFavorites: () => void;\n}\n\nexport const AppButtons = ({ viewingFavorites, isLoading, joke, favorites, setJoke, setViewingFavorites, setFavorites, clearFavorites }: AppButtonsProps) => {\n  const handleShowFavorites = () => setViewingFavorites(!viewingFavorites);\n  const handleGetJoke = () => {\n    setJoke(undefined);\n    setViewingFavorites(false);\n  };\n  const saveFavoriteJoke = () => {\n    if (!joke) return;\n    const newFavorites: jokeData[] = [joke, ...favorites];\n    setFavorites(newFavorites);\n    setJoke(undefined)\n  };\n  return (\n    <ButtonGroup aria-label=\"Main App Buttons\" className=\"Buttons\">\n      <Button\n        variant=\"primary\"\n        onClick={handleGetJoke}\n        disabled={isLoading ? true : false}\n        className='my-4'>\n        Make Me Laugh!\n      </Button>\n\n      <SaveJoke joke={joke} viewingFavorites={viewingFavorites} saveFavoriteJoke={saveFavoriteJoke} />\n\n      <Button\n        variant=\"secondary\"\n        onClick={handleShowFavorites}\n        className={`${favorites.length ? 'ShowFavoritesButton' : ''} my-4`}\n        data-favorites={favorites.length}\n      >\n        {!viewingFavorites ? 'Show my Favorites' : 'Hide my Favorites'}\n      </Button>\n\n      {joke && !viewingFavorites && <TweetButton joke={joke} bootstrapClasses={['my-4']} />}\n\n      <RemoveFavorites clearFavorites={clearFavorites} haveFavorites={!!favorites.length} viewingFavorites={viewingFavorites} />\n    </ButtonGroup>\n  );\n};","import * as React from 'react';\nimport './Footer.css';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"Footer\">\n      <p>\n        <a data-testid=\"footer\" href=\"https://github.com/druserkes\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Dru Serkes &copy;2021\n        </a>\n      </p>\n    </footer>\n  );\n};","import * as React from 'react';\n\nexport const Disclaimer = () => {\n    return (\n        <p>\n            <small className=\"mb-4\">\n                <strong>Disclaimer:</strong> Jokes are being served via <a href=\"https://v2.jokeapi.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">JokeAPI</a>\n                <br />\n                Please report any offensive, racist, sexist, or generally horrible / unfunny content\n            </small>\n        </p>\n    )\n};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { getJokeWithRetry } from './helpers/helpers';\nimport { jokeData } from './types';\nimport { Joke } from './Joke/Joke'\nimport { Favorites } from './Favorites/Favorites';\nimport { AppButtons } from './AppButtons/AppButtons';\nimport Container from 'react-bootstrap/esm/Container';\nimport { Footer } from './Footer/Footer';\nimport { Disclaimer } from './Disclaimer/Disclaimer';\nimport './App.css';\n\n\nexport const App = () => {\n  const [joke, setJoke] = useState<jokeData | undefined>(undefined);\n  const [favorites, setFavorites] = useLocalStorage('favorites');\n  const [isLoading, setIsLoading] = useState(true);\n  const [viewingFavorites, setViewingFavorites] = useState(false);\n  const clearFavorites = (id?: Number) => {\n    if (!id) {\n      setFavorites([])\n      setViewingFavorites(false);\n    } else {\n      const newfavorites = favorites.filter(fav => fav.id !== id);\n      setFavorites(newfavorites);\n    }\n  };\n\n  // Get a joke if you don't have one\n  useEffect(() => {\n    if (!joke) {\n      setIsLoading(true);\n      getJokeWithRetry().then(newJoke => setJoke(newJoke));\n      setIsLoading(false);\n    }\n  }, [joke]);\n\n  return (\n    <>\n      <Container className=\"App\">\n        <h1 className='h1 my-4'>Got Jokes</h1>\n        <Disclaimer />\n\n        <AppButtons\n          viewingFavorites={viewingFavorites}\n          isLoading={isLoading}\n          joke={joke}\n          favorites={favorites}\n          setJoke={setJoke}\n          setViewingFavorites={setViewingFavorites}\n          setFavorites={setFavorites}\n          clearFavorites={clearFavorites}\n        />\n\n        {!viewingFavorites && (<Joke isLoading={isLoading} joke={joke} />)}\n\n        {viewingFavorites && <Favorites favorites={favorites} clearFavorites={clearFavorites} />}\n\n\n      </Container>\n      <Footer />\n\n    </>\n  );\n}","import { useState, useEffect } from 'react';\nimport { jokeData } from '../types';\n\nexport const useLocalStorage = (key: string, initialState: jokeData[] = []): [jokeData[], React.Dispatch<jokeData[]>] => {\n  const [items, setItems] = useState(() => {\n    let value;\n    try {\n      value = JSON.parse(window.localStorage.getItem(key) || JSON.stringify(initialState));\n    } catch (e) {\n      console.log(e);\n      value = initialState;\n    }\n    return value;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(items));\n  }, [key, items]);\n\n  return [items, setItems];\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}